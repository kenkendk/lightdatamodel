#region Disclaimer / License
// Copyright (C) 2008, Kenneth Skovhede
// http://www.hexad.dk, opensource@hexad.dk
// 
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
// 
#endregion
using System;
using System.Collections.Generic;

namespace System.Data.LightDatamodel
{
	/// <summary>
	/// All data providers must implement this interface
	/// </summary>
	public interface IDataProvider
	{
        void DeleteRow(object item);
        object SelectRow(Type type, object primarykey);
        object[] SelectRows(Type type, string filter);
        object[] SelectRows(Type type, string filter, object[] values);
        object[] SelectRows(Type type, QueryModel.Operation operation);
        void UpdateRow(object item);
		void InsertRow(object item);
		object Compute(string tablename, string expression, string filter);
		object GetLastAutogeneratedValue(string tablename);

		string GetPrimaryKey(string tablename);
        bool IsAutoIncrement(string tablename, string column);
		bool IsUnique(string tablename, string column);
		object GetDefaultValue(string tablename, string column);
		object GetDefaultValue(string tablename, string column, string sql);
		string[] GetTablenames();
        Dictionary<string, Type> GetStructure(string sql);
        Dictionary<string, Type> GetTableStructure(string tablename);
		object GetNullValue(Type type);
		int GetColumnStringLength(string tablename, string column);

		string ConnectionString { get;set;}
		void BeginTransaction(Guid id);
		void CommitTransaction(Guid id);
		void RollbackTransaction(Guid id);
		void Close();
		IObjectTransformer Transformer { get; set; }
	}
}
